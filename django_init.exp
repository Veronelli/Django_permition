#!/usr/bin/expect -f

# Asignar variables desde el entorno
set django_database_password [lindex $env(DJANGO_DATABASE_PASSWORD) 0]
set django_database_user [lindex $env(DJANGO_DATABASE_USER) 0]

# Tiempo de espera indefinido
set timeout -1

# Ejecutar las migraciones
spawn python manage.py migrate
expect eof

# Verificar si el usuario existe ejecutando el script Python
spawn python manage.py shell < verify_user_exist.py

# Capturar el resultado de `wait`
set result [wait]

spawn echo [lindex $result 2]
expect eof

# Comprobar el código de salida del proceso anterior
if {[lindex $result 2] == 0} {
    puts "El usuario '$django_database_user' ya existe. No se creará de nuevo."
} else {
    # Crear superusuario si no existe
    spawn python manage.py createsuperuser

    # Responder a los prompts
    expect "Username:"
    send "$django_database_user\r"

    expect "Email address:"
    send "\r"

    expect "Password:"
    send "$django_database_password\r"

    expect "Password (again):"
    send "$django_database_password\r"

    # Usar expresión regular para la pregunta final
    expect -re {Bypass password validation and create user anyway\? \[y/N\]:}
    send "y\r"
    expect eof

}
